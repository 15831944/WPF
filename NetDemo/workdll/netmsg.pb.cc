// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "netmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace netmsg {

namespace {

const ::google::protobuf::Descriptor* MsgPack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPack_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegistTypeMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistTypeMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegistTypeMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistTypeMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryDevCntMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryDevCntMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryDevCntMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryDevCntMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryConnectionsStrMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryConnectionsStrMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryConnectionsStrMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryConnectionsStrMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExcuteSqlMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExcuteSqlMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExcuteSqlMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExcuteSqlMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryDevSpeedMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryDevSpeedMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryDevSpeedMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryDevSpeedMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddVersionMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddVersionMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddVersionMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddVersionMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeDownLoadMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeDownLoadMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeDownLoadMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeDownLoadMsgResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeMsgResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeMsgResult_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_netmsg_2eproto() {
  protobuf_AddDesc_netmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "netmsg.proto");
  GOOGLE_CHECK(file != NULL);
  MsgPack_descriptor_ = file->message_type(0);
  static const int MsgPack_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, registtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, registtypemsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, querydevcntmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, querydevcntmsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, query_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, querymsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, addmsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, excutesqlmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, excutesqlmsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, querydevspeedmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, querydevspeedmsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, queryconnectionsstrmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, queryconnectionsstrmsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, addversionmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, addversionmsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, upgrademsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, upgradedownloadmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, upgradedownloadmsgresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, upgrademsgresult_),
  };
  MsgPack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPack_descriptor_,
      MsgPack::default_instance_,
      MsgPack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPack));
  MsgHead_descriptor_ = file->message_type(1);
  static const int MsgHead_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, globalpacknumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, totalpack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, packindex_),
  };
  MsgHead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHead_descriptor_,
      MsgHead::default_instance_,
      MsgHead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHead));
  RegistTypeMsg_descriptor_ = file->message_type(2);
  static const int RegistTypeMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsg, bdevice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsg, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsg, serverip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsg, bnormal_),
  };
  RegistTypeMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RegistTypeMsg_descriptor_,
      RegistTypeMsg::default_instance_,
      RegistTypeMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RegistTypeMsg));
  RegistTypeMsgResult_descriptor_ = file->message_type(3);
  static const int RegistTypeMsgResult_offsets_[1] = {
  };
  RegistTypeMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RegistTypeMsgResult_descriptor_,
      RegistTypeMsgResult::default_instance_,
      RegistTypeMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistTypeMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RegistTypeMsgResult));
  QueryDevCntMsg_descriptor_ = file->message_type(4);
  static const int QueryDevCntMsg_offsets_[1] = {
  };
  QueryDevCntMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryDevCntMsg_descriptor_,
      QueryDevCntMsg::default_instance_,
      QueryDevCntMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevCntMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevCntMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryDevCntMsg));
  QueryDevCntMsgResult_descriptor_ = file->message_type(5);
  static const int QueryDevCntMsgResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevCntMsgResult, devcnt_),
  };
  QueryDevCntMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryDevCntMsgResult_descriptor_,
      QueryDevCntMsgResult::default_instance_,
      QueryDevCntMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevCntMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevCntMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryDevCntMsgResult));
  QueryConnectionsStrMsg_descriptor_ = file->message_type(6);
  static const int QueryConnectionsStrMsg_offsets_[1] = {
  };
  QueryConnectionsStrMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryConnectionsStrMsg_descriptor_,
      QueryConnectionsStrMsg::default_instance_,
      QueryConnectionsStrMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConnectionsStrMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConnectionsStrMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryConnectionsStrMsg));
  QueryConnectionsStrMsgResult_descriptor_ = file->message_type(7);
  static const int QueryConnectionsStrMsgResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConnectionsStrMsgResult, resultdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConnectionsStrMsgResult, resulterror_),
  };
  QueryConnectionsStrMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryConnectionsStrMsgResult_descriptor_,
      QueryConnectionsStrMsgResult::default_instance_,
      QueryConnectionsStrMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConnectionsStrMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConnectionsStrMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryConnectionsStrMsgResult));
  QueryMsg_descriptor_ = file->message_type(8);
  static const int QueryMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, msg_),
  };
  QueryMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryMsg_descriptor_,
      QueryMsg::default_instance_,
      QueryMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryMsg));
  QueryMsgResult_descriptor_ = file->message_type(9);
  static const int QueryMsgResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsgResult, resultdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsgResult, resulterror_),
  };
  QueryMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryMsgResult_descriptor_,
      QueryMsgResult::default_instance_,
      QueryMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryMsgResult));
  AddMsg_descriptor_ = file->message_type(10);
  static const int AddMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMsg, tablename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMsg, msg_),
  };
  AddMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddMsg_descriptor_,
      AddMsg::default_instance_,
      AddMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddMsg));
  AddMsgResult_descriptor_ = file->message_type(11);
  static const int AddMsgResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMsgResult, resulterror_),
  };
  AddMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddMsgResult_descriptor_,
      AddMsgResult::default_instance_,
      AddMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddMsgResult));
  ExcuteSqlMsg_descriptor_ = file->message_type(12);
  static const int ExcuteSqlMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcuteSqlMsg, msg_),
  };
  ExcuteSqlMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExcuteSqlMsg_descriptor_,
      ExcuteSqlMsg::default_instance_,
      ExcuteSqlMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcuteSqlMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcuteSqlMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExcuteSqlMsg));
  ExcuteSqlMsgResult_descriptor_ = file->message_type(13);
  static const int ExcuteSqlMsgResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcuteSqlMsgResult, resulterror_),
  };
  ExcuteSqlMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExcuteSqlMsgResult_descriptor_,
      ExcuteSqlMsgResult::default_instance_,
      ExcuteSqlMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcuteSqlMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcuteSqlMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExcuteSqlMsgResult));
  QueryDevSpeedMsg_descriptor_ = file->message_type(14);
  static const int QueryDevSpeedMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsg, ipstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsg, askuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsg, starttime_),
  };
  QueryDevSpeedMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryDevSpeedMsg_descriptor_,
      QueryDevSpeedMsg::default_instance_,
      QueryDevSpeedMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryDevSpeedMsg));
  QueryDevSpeedMsgResult_descriptor_ = file->message_type(15);
  static const int QueryDevSpeedMsgResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsgResult, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsgResult, resulterror_),
  };
  QueryDevSpeedMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryDevSpeedMsgResult_descriptor_,
      QueryDevSpeedMsgResult::default_instance_,
      QueryDevSpeedMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryDevSpeedMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryDevSpeedMsgResult));
  UpgradeMsg_descriptor_ = file->message_type(16);
  static const int UpgradeMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsg, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsg, version_),
  };
  UpgradeMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeMsg_descriptor_,
      UpgradeMsg::default_instance_,
      UpgradeMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeMsg));
  AddVersionMsg_descriptor_ = file->message_type(17);
  static const int AddVersionMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsg, bianhao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsg, banbenhao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsg, anzhuangbao_),
  };
  AddVersionMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddVersionMsg_descriptor_,
      AddVersionMsg::default_instance_,
      AddVersionMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddVersionMsg));
  AddVersionMsgResult_descriptor_ = file->message_type(18);
  static const int AddVersionMsgResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsgResult, resultdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsgResult, resulterror_),
  };
  AddVersionMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddVersionMsgResult_descriptor_,
      AddVersionMsgResult::default_instance_,
      AddVersionMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddVersionMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddVersionMsgResult));
  UpgradeDownLoadMsg_descriptor_ = file->message_type(19);
  static const int UpgradeDownLoadMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsg, seteupdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsg, resulterror_),
  };
  UpgradeDownLoadMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeDownLoadMsg_descriptor_,
      UpgradeDownLoadMsg::default_instance_,
      UpgradeDownLoadMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeDownLoadMsg));
  UpgradeDownLoadMsgResult_descriptor_ = file->message_type(20);
  static const int UpgradeDownLoadMsgResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsgResult, resultdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsgResult, resulterror_),
  };
  UpgradeDownLoadMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeDownLoadMsgResult_descriptor_,
      UpgradeDownLoadMsgResult::default_instance_,
      UpgradeDownLoadMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeDownLoadMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeDownLoadMsgResult));
  UpgradeMsgResult_descriptor_ = file->message_type(21);
  static const int UpgradeMsgResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsgResult, resultdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsgResult, resulterror_),
  };
  UpgradeMsgResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeMsgResult_descriptor_,
      UpgradeMsgResult::default_instance_,
      UpgradeMsgResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsgResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeMsgResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeMsgResult));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_netmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPack_descriptor_, &MsgPack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHead_descriptor_, &MsgHead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RegistTypeMsg_descriptor_, &RegistTypeMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RegistTypeMsgResult_descriptor_, &RegistTypeMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryDevCntMsg_descriptor_, &QueryDevCntMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryDevCntMsgResult_descriptor_, &QueryDevCntMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryConnectionsStrMsg_descriptor_, &QueryConnectionsStrMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryConnectionsStrMsgResult_descriptor_, &QueryConnectionsStrMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryMsg_descriptor_, &QueryMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryMsgResult_descriptor_, &QueryMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddMsg_descriptor_, &AddMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddMsgResult_descriptor_, &AddMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExcuteSqlMsg_descriptor_, &ExcuteSqlMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExcuteSqlMsgResult_descriptor_, &ExcuteSqlMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryDevSpeedMsg_descriptor_, &QueryDevSpeedMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryDevSpeedMsgResult_descriptor_, &QueryDevSpeedMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeMsg_descriptor_, &UpgradeMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddVersionMsg_descriptor_, &AddVersionMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddVersionMsgResult_descriptor_, &AddVersionMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeDownLoadMsg_descriptor_, &UpgradeDownLoadMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeDownLoadMsgResult_descriptor_, &UpgradeDownLoadMsgResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeMsgResult_descriptor_, &UpgradeMsgResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_netmsg_2eproto() {
  delete MsgPack::default_instance_;
  delete MsgPack_reflection_;
  delete MsgHead::default_instance_;
  delete MsgHead_reflection_;
  delete RegistTypeMsg::default_instance_;
  delete RegistTypeMsg_reflection_;
  delete RegistTypeMsgResult::default_instance_;
  delete RegistTypeMsgResult_reflection_;
  delete QueryDevCntMsg::default_instance_;
  delete QueryDevCntMsg_reflection_;
  delete QueryDevCntMsgResult::default_instance_;
  delete QueryDevCntMsgResult_reflection_;
  delete QueryConnectionsStrMsg::default_instance_;
  delete QueryConnectionsStrMsg_reflection_;
  delete QueryConnectionsStrMsgResult::default_instance_;
  delete QueryConnectionsStrMsgResult_reflection_;
  delete QueryMsg::default_instance_;
  delete QueryMsg_reflection_;
  delete QueryMsgResult::default_instance_;
  delete QueryMsgResult_reflection_;
  delete AddMsg::default_instance_;
  delete AddMsg_reflection_;
  delete AddMsgResult::default_instance_;
  delete AddMsgResult_reflection_;
  delete ExcuteSqlMsg::default_instance_;
  delete ExcuteSqlMsg_reflection_;
  delete ExcuteSqlMsgResult::default_instance_;
  delete ExcuteSqlMsgResult_reflection_;
  delete QueryDevSpeedMsg::default_instance_;
  delete QueryDevSpeedMsg_reflection_;
  delete QueryDevSpeedMsgResult::default_instance_;
  delete QueryDevSpeedMsgResult_reflection_;
  delete UpgradeMsg::default_instance_;
  delete UpgradeMsg_reflection_;
  delete AddVersionMsg::default_instance_;
  delete AddVersionMsg_reflection_;
  delete AddVersionMsgResult::default_instance_;
  delete AddVersionMsgResult_reflection_;
  delete UpgradeDownLoadMsg::default_instance_;
  delete UpgradeDownLoadMsg_reflection_;
  delete UpgradeDownLoadMsgResult::default_instance_;
  delete UpgradeDownLoadMsgResult_reflection_;
  delete UpgradeMsgResult::default_instance_;
  delete UpgradeMsgResult_reflection_;
}

void protobuf_AddDesc_netmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014netmsg.proto\022\006netmsg\"\267\010\n\007MsgPack\022\035\n\004he"
    "ad\030\001 \002(\0132\017.netmsg.MsgHead\022)\n\nregisttype\030"
    "\002 \001(\0132\025.netmsg.RegistTypeMsg\0228\n\023registty"
    "pemsgresult\030\003 \001(\0132\033.netmsg.RegistTypeMsg"
    "Result\022.\n\016querydevcntmsg\030\004 \001(\0132\026.netmsg."
    "QueryDevCntMsg\022:\n\024querydevcntmsgresult\030\005"
    " \001(\0132\034.netmsg.QueryDevCntMsgResult\022\037\n\005qu"
    "ery\030\006 \001(\0132\020.netmsg.QueryMsg\022\033\n\003add\030\007 \001(\013"
    "2\016.netmsg.AddMsg\022.\n\016querymsgresult\030\010 \001(\013"
    "2\026.netmsg.QueryMsgResult\022*\n\014addmsgresult"
    "\030\t \001(\0132\024.netmsg.AddMsgResult\022*\n\014excutesq"
    "lmsg\030\n \001(\0132\024.netmsg.ExcuteSqlMsg\0226\n\022excu"
    "tesqlmsgresult\030\013 \001(\0132\032.netmsg.ExcuteSqlM"
    "sgResult\0222\n\020querydevspeedmsg\030\014 \001(\0132\030.net"
    "msg.QueryDevSpeedMsg\022>\n\026querydevspeedmsg"
    "result\030\r \001(\0132\036.netmsg.QueryDevSpeedMsgRe"
    "sult\022>\n\026queryconnectionsstrmsg\030\016 \001(\0132\036.n"
    "etmsg.QueryConnectionsStrMsg\022J\n\034querycon"
    "nectionsstrmsgresult\030\017 \001(\0132$.netmsg.Quer"
    "yConnectionsStrMsgResult\022,\n\raddversionms"
    "g\030\024 \001(\0132\025.netmsg.AddVersionMsg\0228\n\023addver"
    "sionmsgresult\030\025 \001(\0132\033.netmsg.AddVersionM"
    "sgResult\022&\n\nupgrademsg\0302 \001(\0132\022.netmsg.Up"
    "gradeMsg\0226\n\022upgradedownloadmsg\0303 \001(\0132\032.n"
    "etmsg.UpgradeDownLoadMsg\022B\n\030upgradedownl"
    "oadmsgresult\0304 \001(\0132 .netmsg.UpgradeDownL"
    "oadMsgResult\0222\n\020upgrademsgresult\0305 \001(\0132\030"
    ".netmsg.UpgradeMsgResult\"R\n\007MsgHead\022\033\n\020g"
    "lobalPackNumber\030\001 \002(\r:\0011\022\024\n\ttotalPack\030\002 "
    "\002(\005:\0011\022\024\n\tpackIndex\030\003 \002(\005:\0010\"O\n\rRegistTy"
    "peMsg\022\017\n\007bDevice\030\001 \002(\010\022\n\n\002ip\030\002 \002(\t\022\020\n\010se"
    "rverip\030\003 \002(\t\022\017\n\007bNormal\030\004 \002(\010\"\025\n\023RegistT"
    "ypeMsgResult\"\020\n\016QueryDevCntMsg\"&\n\024QueryD"
    "evCntMsgResult\022\016\n\006devCnt\030\001 \002(\005\"\030\n\026QueryC"
    "onnectionsStrMsg\"G\n\034QueryConnectionsStrM"
    "sgResult\022\022\n\nresultData\030\001 \002(\t\022\023\n\013resultEr"
    "ror\030\002 \002(\t\"\027\n\010QueryMsg\022\013\n\003Msg\030\001 \002(\t\"9\n\016Qu"
    "eryMsgResult\022\022\n\nresultData\030\001 \002(\t\022\023\n\013resu"
    "ltError\030\002 \002(\t\"(\n\006AddMsg\022\021\n\tTableName\030\001 \002"
    "(\t\022\013\n\003Msg\030\002 \002(\t\"#\n\014AddMsgResult\022\023\n\013resul"
    "tError\030\001 \002(\t\"\033\n\014ExcuteSqlMsg\022\013\n\003Msg\030\001 \002("
    "\t\")\n\022ExcuteSqlMsgResult\022\023\n\013resultError\030\001"
    " \002(\t\"G\n\020QueryDevSpeedMsg\022\r\n\005ipStr\030\001 \002(\t\022"
    "\021\n\taskUserID\030\002 \002(\005\022\021\n\tstartTime\030\003 \002(\003\"<\n"
    "\026QueryDevSpeedMsgResult\022\r\n\005speed\030\001 \002(\005\022\023"
    "\n\013resultError\030\002 \002(\t\")\n\nUpgradeMsg\022\n\n\002ip\030"
    "\001 \002(\t\022\017\n\007version\030\002 \002(\t\"H\n\rAddVersionMsg\022"
    "\017\n\007Bianhao\030\001 \002(\t\022\021\n\tBanbenhao\030\002 \002(\t\022\023\n\013A"
    "nzhuangbao\030\003 \002(\014\">\n\023AddVersionMsgResult\022"
    "\022\n\nresultData\030\001 \002(\t\022\023\n\013resultError\030\002 \002(\t"
    "\"=\n\022UpgradeDownLoadMsg\022\022\n\nseteupData\030\001 \002"
    "(\014\022\023\n\013resultError\030\002 \002(\t\"C\n\030UpgradeDownLo"
    "adMsgResult\022\022\n\nresultData\030\001 \002(\t\022\023\n\013resul"
    "tError\030\002 \002(\t\";\n\020UpgradeMsgResult\022\022\n\nresu"
    "ltData\030\001 \002(\t\022\023\n\013resultError\030\002 \002(\t", 2193);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netmsg.proto", &protobuf_RegisterTypes);
  MsgPack::default_instance_ = new MsgPack();
  MsgHead::default_instance_ = new MsgHead();
  RegistTypeMsg::default_instance_ = new RegistTypeMsg();
  RegistTypeMsgResult::default_instance_ = new RegistTypeMsgResult();
  QueryDevCntMsg::default_instance_ = new QueryDevCntMsg();
  QueryDevCntMsgResult::default_instance_ = new QueryDevCntMsgResult();
  QueryConnectionsStrMsg::default_instance_ = new QueryConnectionsStrMsg();
  QueryConnectionsStrMsgResult::default_instance_ = new QueryConnectionsStrMsgResult();
  QueryMsg::default_instance_ = new QueryMsg();
  QueryMsgResult::default_instance_ = new QueryMsgResult();
  AddMsg::default_instance_ = new AddMsg();
  AddMsgResult::default_instance_ = new AddMsgResult();
  ExcuteSqlMsg::default_instance_ = new ExcuteSqlMsg();
  ExcuteSqlMsgResult::default_instance_ = new ExcuteSqlMsgResult();
  QueryDevSpeedMsg::default_instance_ = new QueryDevSpeedMsg();
  QueryDevSpeedMsgResult::default_instance_ = new QueryDevSpeedMsgResult();
  UpgradeMsg::default_instance_ = new UpgradeMsg();
  AddVersionMsg::default_instance_ = new AddVersionMsg();
  AddVersionMsgResult::default_instance_ = new AddVersionMsgResult();
  UpgradeDownLoadMsg::default_instance_ = new UpgradeDownLoadMsg();
  UpgradeDownLoadMsgResult::default_instance_ = new UpgradeDownLoadMsgResult();
  UpgradeMsgResult::default_instance_ = new UpgradeMsgResult();
  MsgPack::default_instance_->InitAsDefaultInstance();
  MsgHead::default_instance_->InitAsDefaultInstance();
  RegistTypeMsg::default_instance_->InitAsDefaultInstance();
  RegistTypeMsgResult::default_instance_->InitAsDefaultInstance();
  QueryDevCntMsg::default_instance_->InitAsDefaultInstance();
  QueryDevCntMsgResult::default_instance_->InitAsDefaultInstance();
  QueryConnectionsStrMsg::default_instance_->InitAsDefaultInstance();
  QueryConnectionsStrMsgResult::default_instance_->InitAsDefaultInstance();
  QueryMsg::default_instance_->InitAsDefaultInstance();
  QueryMsgResult::default_instance_->InitAsDefaultInstance();
  AddMsg::default_instance_->InitAsDefaultInstance();
  AddMsgResult::default_instance_->InitAsDefaultInstance();
  ExcuteSqlMsg::default_instance_->InitAsDefaultInstance();
  ExcuteSqlMsgResult::default_instance_->InitAsDefaultInstance();
  QueryDevSpeedMsg::default_instance_->InitAsDefaultInstance();
  QueryDevSpeedMsgResult::default_instance_->InitAsDefaultInstance();
  UpgradeMsg::default_instance_->InitAsDefaultInstance();
  AddVersionMsg::default_instance_->InitAsDefaultInstance();
  AddVersionMsgResult::default_instance_->InitAsDefaultInstance();
  UpgradeDownLoadMsg::default_instance_->InitAsDefaultInstance();
  UpgradeDownLoadMsgResult::default_instance_->InitAsDefaultInstance();
  UpgradeMsgResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_netmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_netmsg_2eproto {
  StaticDescriptorInitializer_netmsg_2eproto() {
    protobuf_AddDesc_netmsg_2eproto();
  }
} static_descriptor_initializer_netmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgPack::kHeadFieldNumber;
const int MsgPack::kRegisttypeFieldNumber;
const int MsgPack::kRegisttypemsgresultFieldNumber;
const int MsgPack::kQuerydevcntmsgFieldNumber;
const int MsgPack::kQuerydevcntmsgresultFieldNumber;
const int MsgPack::kQueryFieldNumber;
const int MsgPack::kAddFieldNumber;
const int MsgPack::kQuerymsgresultFieldNumber;
const int MsgPack::kAddmsgresultFieldNumber;
const int MsgPack::kExcutesqlmsgFieldNumber;
const int MsgPack::kExcutesqlmsgresultFieldNumber;
const int MsgPack::kQuerydevspeedmsgFieldNumber;
const int MsgPack::kQuerydevspeedmsgresultFieldNumber;
const int MsgPack::kQueryconnectionsstrmsgFieldNumber;
const int MsgPack::kQueryconnectionsstrmsgresultFieldNumber;
const int MsgPack::kAddversionmsgFieldNumber;
const int MsgPack::kAddversionmsgresultFieldNumber;
const int MsgPack::kUpgrademsgFieldNumber;
const int MsgPack::kUpgradedownloadmsgFieldNumber;
const int MsgPack::kUpgradedownloadmsgresultFieldNumber;
const int MsgPack::kUpgrademsgresultFieldNumber;
#endif  // !_MSC_VER

MsgPack::MsgPack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.MsgPack)
}

void MsgPack::InitAsDefaultInstance() {
  head_ = const_cast< ::netmsg::MsgHead*>(&::netmsg::MsgHead::default_instance());
  registtype_ = const_cast< ::netmsg::RegistTypeMsg*>(&::netmsg::RegistTypeMsg::default_instance());
  registtypemsgresult_ = const_cast< ::netmsg::RegistTypeMsgResult*>(&::netmsg::RegistTypeMsgResult::default_instance());
  querydevcntmsg_ = const_cast< ::netmsg::QueryDevCntMsg*>(&::netmsg::QueryDevCntMsg::default_instance());
  querydevcntmsgresult_ = const_cast< ::netmsg::QueryDevCntMsgResult*>(&::netmsg::QueryDevCntMsgResult::default_instance());
  query_ = const_cast< ::netmsg::QueryMsg*>(&::netmsg::QueryMsg::default_instance());
  add_ = const_cast< ::netmsg::AddMsg*>(&::netmsg::AddMsg::default_instance());
  querymsgresult_ = const_cast< ::netmsg::QueryMsgResult*>(&::netmsg::QueryMsgResult::default_instance());
  addmsgresult_ = const_cast< ::netmsg::AddMsgResult*>(&::netmsg::AddMsgResult::default_instance());
  excutesqlmsg_ = const_cast< ::netmsg::ExcuteSqlMsg*>(&::netmsg::ExcuteSqlMsg::default_instance());
  excutesqlmsgresult_ = const_cast< ::netmsg::ExcuteSqlMsgResult*>(&::netmsg::ExcuteSqlMsgResult::default_instance());
  querydevspeedmsg_ = const_cast< ::netmsg::QueryDevSpeedMsg*>(&::netmsg::QueryDevSpeedMsg::default_instance());
  querydevspeedmsgresult_ = const_cast< ::netmsg::QueryDevSpeedMsgResult*>(&::netmsg::QueryDevSpeedMsgResult::default_instance());
  queryconnectionsstrmsg_ = const_cast< ::netmsg::QueryConnectionsStrMsg*>(&::netmsg::QueryConnectionsStrMsg::default_instance());
  queryconnectionsstrmsgresult_ = const_cast< ::netmsg::QueryConnectionsStrMsgResult*>(&::netmsg::QueryConnectionsStrMsgResult::default_instance());
  addversionmsg_ = const_cast< ::netmsg::AddVersionMsg*>(&::netmsg::AddVersionMsg::default_instance());
  addversionmsgresult_ = const_cast< ::netmsg::AddVersionMsgResult*>(&::netmsg::AddVersionMsgResult::default_instance());
  upgrademsg_ = const_cast< ::netmsg::UpgradeMsg*>(&::netmsg::UpgradeMsg::default_instance());
  upgradedownloadmsg_ = const_cast< ::netmsg::UpgradeDownLoadMsg*>(&::netmsg::UpgradeDownLoadMsg::default_instance());
  upgradedownloadmsgresult_ = const_cast< ::netmsg::UpgradeDownLoadMsgResult*>(&::netmsg::UpgradeDownLoadMsgResult::default_instance());
  upgrademsgresult_ = const_cast< ::netmsg::UpgradeMsgResult*>(&::netmsg::UpgradeMsgResult::default_instance());
}

MsgPack::MsgPack(const MsgPack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.MsgPack)
}

void MsgPack::SharedCtor() {
  _cached_size_ = 0;
  head_ = NULL;
  registtype_ = NULL;
  registtypemsgresult_ = NULL;
  querydevcntmsg_ = NULL;
  querydevcntmsgresult_ = NULL;
  query_ = NULL;
  add_ = NULL;
  querymsgresult_ = NULL;
  addmsgresult_ = NULL;
  excutesqlmsg_ = NULL;
  excutesqlmsgresult_ = NULL;
  querydevspeedmsg_ = NULL;
  querydevspeedmsgresult_ = NULL;
  queryconnectionsstrmsg_ = NULL;
  queryconnectionsstrmsgresult_ = NULL;
  addversionmsg_ = NULL;
  addversionmsgresult_ = NULL;
  upgrademsg_ = NULL;
  upgradedownloadmsg_ = NULL;
  upgradedownloadmsgresult_ = NULL;
  upgrademsgresult_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPack::~MsgPack() {
  // @@protoc_insertion_point(destructor:netmsg.MsgPack)
  SharedDtor();
}

void MsgPack::SharedDtor() {
  if (this != default_instance_) {
    delete head_;
    delete registtype_;
    delete registtypemsgresult_;
    delete querydevcntmsg_;
    delete querydevcntmsgresult_;
    delete query_;
    delete add_;
    delete querymsgresult_;
    delete addmsgresult_;
    delete excutesqlmsg_;
    delete excutesqlmsgresult_;
    delete querydevspeedmsg_;
    delete querydevspeedmsgresult_;
    delete queryconnectionsstrmsg_;
    delete queryconnectionsstrmsgresult_;
    delete addversionmsg_;
    delete addversionmsgresult_;
    delete upgrademsg_;
    delete upgradedownloadmsg_;
    delete upgradedownloadmsgresult_;
    delete upgrademsgresult_;
  }
}

void MsgPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPack_descriptor_;
}

const MsgPack& MsgPack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

MsgPack* MsgPack::default_instance_ = NULL;

MsgPack* MsgPack::New() const {
  return new MsgPack;
}

void MsgPack::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_head()) {
      if (head_ != NULL) head_->::netmsg::MsgHead::Clear();
    }
    if (has_registtype()) {
      if (registtype_ != NULL) registtype_->::netmsg::RegistTypeMsg::Clear();
    }
    if (has_registtypemsgresult()) {
      if (registtypemsgresult_ != NULL) registtypemsgresult_->::netmsg::RegistTypeMsgResult::Clear();
    }
    if (has_querydevcntmsg()) {
      if (querydevcntmsg_ != NULL) querydevcntmsg_->::netmsg::QueryDevCntMsg::Clear();
    }
    if (has_querydevcntmsgresult()) {
      if (querydevcntmsgresult_ != NULL) querydevcntmsgresult_->::netmsg::QueryDevCntMsgResult::Clear();
    }
    if (has_query()) {
      if (query_ != NULL) query_->::netmsg::QueryMsg::Clear();
    }
    if (has_add()) {
      if (add_ != NULL) add_->::netmsg::AddMsg::Clear();
    }
    if (has_querymsgresult()) {
      if (querymsgresult_ != NULL) querymsgresult_->::netmsg::QueryMsgResult::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_addmsgresult()) {
      if (addmsgresult_ != NULL) addmsgresult_->::netmsg::AddMsgResult::Clear();
    }
    if (has_excutesqlmsg()) {
      if (excutesqlmsg_ != NULL) excutesqlmsg_->::netmsg::ExcuteSqlMsg::Clear();
    }
    if (has_excutesqlmsgresult()) {
      if (excutesqlmsgresult_ != NULL) excutesqlmsgresult_->::netmsg::ExcuteSqlMsgResult::Clear();
    }
    if (has_querydevspeedmsg()) {
      if (querydevspeedmsg_ != NULL) querydevspeedmsg_->::netmsg::QueryDevSpeedMsg::Clear();
    }
    if (has_querydevspeedmsgresult()) {
      if (querydevspeedmsgresult_ != NULL) querydevspeedmsgresult_->::netmsg::QueryDevSpeedMsgResult::Clear();
    }
    if (has_queryconnectionsstrmsg()) {
      if (queryconnectionsstrmsg_ != NULL) queryconnectionsstrmsg_->::netmsg::QueryConnectionsStrMsg::Clear();
    }
    if (has_queryconnectionsstrmsgresult()) {
      if (queryconnectionsstrmsgresult_ != NULL) queryconnectionsstrmsgresult_->::netmsg::QueryConnectionsStrMsgResult::Clear();
    }
    if (has_addversionmsg()) {
      if (addversionmsg_ != NULL) addversionmsg_->::netmsg::AddVersionMsg::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 2031616) {
    if (has_addversionmsgresult()) {
      if (addversionmsgresult_ != NULL) addversionmsgresult_->::netmsg::AddVersionMsgResult::Clear();
    }
    if (has_upgrademsg()) {
      if (upgrademsg_ != NULL) upgrademsg_->::netmsg::UpgradeMsg::Clear();
    }
    if (has_upgradedownloadmsg()) {
      if (upgradedownloadmsg_ != NULL) upgradedownloadmsg_->::netmsg::UpgradeDownLoadMsg::Clear();
    }
    if (has_upgradedownloadmsgresult()) {
      if (upgradedownloadmsgresult_ != NULL) upgradedownloadmsgresult_->::netmsg::UpgradeDownLoadMsgResult::Clear();
    }
    if (has_upgrademsgresult()) {
      if (upgrademsgresult_ != NULL) upgrademsgresult_->::netmsg::UpgradeMsgResult::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.MsgPack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .netmsg.MsgHead head = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_registtype;
        break;
      }

      // optional .netmsg.RegistTypeMsg registtype = 2;
      case 2: {
        if (tag == 18) {
         parse_registtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registtype()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_registtypemsgresult;
        break;
      }

      // optional .netmsg.RegistTypeMsgResult registtypemsgresult = 3;
      case 3: {
        if (tag == 26) {
         parse_registtypemsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registtypemsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_querydevcntmsg;
        break;
      }

      // optional .netmsg.QueryDevCntMsg querydevcntmsg = 4;
      case 4: {
        if (tag == 34) {
         parse_querydevcntmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevcntmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_querydevcntmsgresult;
        break;
      }

      // optional .netmsg.QueryDevCntMsgResult querydevcntmsgresult = 5;
      case 5: {
        if (tag == 42) {
         parse_querydevcntmsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevcntmsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_query;
        break;
      }

      // optional .netmsg.QueryMsg query = 6;
      case 6: {
        if (tag == 50) {
         parse_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_add;
        break;
      }

      // optional .netmsg.AddMsg add = 7;
      case 7: {
        if (tag == 58) {
         parse_add:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_querymsgresult;
        break;
      }

      // optional .netmsg.QueryMsgResult querymsgresult = 8;
      case 8: {
        if (tag == 66) {
         parse_querymsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querymsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_addmsgresult;
        break;
      }

      // optional .netmsg.AddMsgResult addmsgresult = 9;
      case 9: {
        if (tag == 74) {
         parse_addmsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addmsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_excutesqlmsg;
        break;
      }

      // optional .netmsg.ExcuteSqlMsg excutesqlmsg = 10;
      case 10: {
        if (tag == 82) {
         parse_excutesqlmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_excutesqlmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_excutesqlmsgresult;
        break;
      }

      // optional .netmsg.ExcuteSqlMsgResult excutesqlmsgresult = 11;
      case 11: {
        if (tag == 90) {
         parse_excutesqlmsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_excutesqlmsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_querydevspeedmsg;
        break;
      }

      // optional .netmsg.QueryDevSpeedMsg querydevspeedmsg = 12;
      case 12: {
        if (tag == 98) {
         parse_querydevspeedmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevspeedmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_querydevspeedmsgresult;
        break;
      }

      // optional .netmsg.QueryDevSpeedMsgResult querydevspeedmsgresult = 13;
      case 13: {
        if (tag == 106) {
         parse_querydevspeedmsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querydevspeedmsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_queryconnectionsstrmsg;
        break;
      }

      // optional .netmsg.QueryConnectionsStrMsg queryconnectionsstrmsg = 14;
      case 14: {
        if (tag == 114) {
         parse_queryconnectionsstrmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryconnectionsstrmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_queryconnectionsstrmsgresult;
        break;
      }

      // optional .netmsg.QueryConnectionsStrMsgResult queryconnectionsstrmsgresult = 15;
      case 15: {
        if (tag == 122) {
         parse_queryconnectionsstrmsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryconnectionsstrmsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_addversionmsg;
        break;
      }

      // optional .netmsg.AddVersionMsg addversionmsg = 20;
      case 20: {
        if (tag == 162) {
         parse_addversionmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addversionmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_addversionmsgresult;
        break;
      }

      // optional .netmsg.AddVersionMsgResult addversionmsgresult = 21;
      case 21: {
        if (tag == 170) {
         parse_addversionmsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addversionmsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_upgrademsg;
        break;
      }

      // optional .netmsg.UpgradeMsg upgrademsg = 50;
      case 50: {
        if (tag == 402) {
         parse_upgrademsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_upgrademsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_upgradedownloadmsg;
        break;
      }

      // optional .netmsg.UpgradeDownLoadMsg upgradedownloadmsg = 51;
      case 51: {
        if (tag == 410) {
         parse_upgradedownloadmsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_upgradedownloadmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_upgradedownloadmsgresult;
        break;
      }

      // optional .netmsg.UpgradeDownLoadMsgResult upgradedownloadmsgresult = 52;
      case 52: {
        if (tag == 418) {
         parse_upgradedownloadmsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_upgradedownloadmsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(426)) goto parse_upgrademsgresult;
        break;
      }

      // optional .netmsg.UpgradeMsgResult upgrademsgresult = 53;
      case 53: {
        if (tag == 426) {
         parse_upgrademsgresult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_upgrademsgresult()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.MsgPack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.MsgPack)
  return false;
#undef DO_
}

void MsgPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.MsgPack)
  // required .netmsg.MsgHead head = 1;
  if (has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->head(), output);
  }

  // optional .netmsg.RegistTypeMsg registtype = 2;
  if (has_registtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->registtype(), output);
  }

  // optional .netmsg.RegistTypeMsgResult registtypemsgresult = 3;
  if (has_registtypemsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->registtypemsgresult(), output);
  }

  // optional .netmsg.QueryDevCntMsg querydevcntmsg = 4;
  if (has_querydevcntmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->querydevcntmsg(), output);
  }

  // optional .netmsg.QueryDevCntMsgResult querydevcntmsgresult = 5;
  if (has_querydevcntmsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->querydevcntmsgresult(), output);
  }

  // optional .netmsg.QueryMsg query = 6;
  if (has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->query(), output);
  }

  // optional .netmsg.AddMsg add = 7;
  if (has_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->add(), output);
  }

  // optional .netmsg.QueryMsgResult querymsgresult = 8;
  if (has_querymsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->querymsgresult(), output);
  }

  // optional .netmsg.AddMsgResult addmsgresult = 9;
  if (has_addmsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->addmsgresult(), output);
  }

  // optional .netmsg.ExcuteSqlMsg excutesqlmsg = 10;
  if (has_excutesqlmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->excutesqlmsg(), output);
  }

  // optional .netmsg.ExcuteSqlMsgResult excutesqlmsgresult = 11;
  if (has_excutesqlmsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->excutesqlmsgresult(), output);
  }

  // optional .netmsg.QueryDevSpeedMsg querydevspeedmsg = 12;
  if (has_querydevspeedmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->querydevspeedmsg(), output);
  }

  // optional .netmsg.QueryDevSpeedMsgResult querydevspeedmsgresult = 13;
  if (has_querydevspeedmsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->querydevspeedmsgresult(), output);
  }

  // optional .netmsg.QueryConnectionsStrMsg queryconnectionsstrmsg = 14;
  if (has_queryconnectionsstrmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->queryconnectionsstrmsg(), output);
  }

  // optional .netmsg.QueryConnectionsStrMsgResult queryconnectionsstrmsgresult = 15;
  if (has_queryconnectionsstrmsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->queryconnectionsstrmsgresult(), output);
  }

  // optional .netmsg.AddVersionMsg addversionmsg = 20;
  if (has_addversionmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->addversionmsg(), output);
  }

  // optional .netmsg.AddVersionMsgResult addversionmsgresult = 21;
  if (has_addversionmsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->addversionmsgresult(), output);
  }

  // optional .netmsg.UpgradeMsg upgrademsg = 50;
  if (has_upgrademsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->upgrademsg(), output);
  }

  // optional .netmsg.UpgradeDownLoadMsg upgradedownloadmsg = 51;
  if (has_upgradedownloadmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->upgradedownloadmsg(), output);
  }

  // optional .netmsg.UpgradeDownLoadMsgResult upgradedownloadmsgresult = 52;
  if (has_upgradedownloadmsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->upgradedownloadmsgresult(), output);
  }

  // optional .netmsg.UpgradeMsgResult upgrademsgresult = 53;
  if (has_upgrademsgresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->upgrademsgresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.MsgPack)
}

::google::protobuf::uint8* MsgPack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.MsgPack)
  // required .netmsg.MsgHead head = 1;
  if (has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->head(), target);
  }

  // optional .netmsg.RegistTypeMsg registtype = 2;
  if (has_registtype()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->registtype(), target);
  }

  // optional .netmsg.RegistTypeMsgResult registtypemsgresult = 3;
  if (has_registtypemsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->registtypemsgresult(), target);
  }

  // optional .netmsg.QueryDevCntMsg querydevcntmsg = 4;
  if (has_querydevcntmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->querydevcntmsg(), target);
  }

  // optional .netmsg.QueryDevCntMsgResult querydevcntmsgresult = 5;
  if (has_querydevcntmsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->querydevcntmsgresult(), target);
  }

  // optional .netmsg.QueryMsg query = 6;
  if (has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->query(), target);
  }

  // optional .netmsg.AddMsg add = 7;
  if (has_add()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->add(), target);
  }

  // optional .netmsg.QueryMsgResult querymsgresult = 8;
  if (has_querymsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->querymsgresult(), target);
  }

  // optional .netmsg.AddMsgResult addmsgresult = 9;
  if (has_addmsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->addmsgresult(), target);
  }

  // optional .netmsg.ExcuteSqlMsg excutesqlmsg = 10;
  if (has_excutesqlmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->excutesqlmsg(), target);
  }

  // optional .netmsg.ExcuteSqlMsgResult excutesqlmsgresult = 11;
  if (has_excutesqlmsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->excutesqlmsgresult(), target);
  }

  // optional .netmsg.QueryDevSpeedMsg querydevspeedmsg = 12;
  if (has_querydevspeedmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->querydevspeedmsg(), target);
  }

  // optional .netmsg.QueryDevSpeedMsgResult querydevspeedmsgresult = 13;
  if (has_querydevspeedmsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->querydevspeedmsgresult(), target);
  }

  // optional .netmsg.QueryConnectionsStrMsg queryconnectionsstrmsg = 14;
  if (has_queryconnectionsstrmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->queryconnectionsstrmsg(), target);
  }

  // optional .netmsg.QueryConnectionsStrMsgResult queryconnectionsstrmsgresult = 15;
  if (has_queryconnectionsstrmsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->queryconnectionsstrmsgresult(), target);
  }

  // optional .netmsg.AddVersionMsg addversionmsg = 20;
  if (has_addversionmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->addversionmsg(), target);
  }

  // optional .netmsg.AddVersionMsgResult addversionmsgresult = 21;
  if (has_addversionmsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->addversionmsgresult(), target);
  }

  // optional .netmsg.UpgradeMsg upgrademsg = 50;
  if (has_upgrademsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->upgrademsg(), target);
  }

  // optional .netmsg.UpgradeDownLoadMsg upgradedownloadmsg = 51;
  if (has_upgradedownloadmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        51, this->upgradedownloadmsg(), target);
  }

  // optional .netmsg.UpgradeDownLoadMsgResult upgradedownloadmsgresult = 52;
  if (has_upgradedownloadmsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        52, this->upgradedownloadmsgresult(), target);
  }

  // optional .netmsg.UpgradeMsgResult upgrademsgresult = 53;
  if (has_upgrademsgresult()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        53, this->upgrademsgresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.MsgPack)
  return target;
}

int MsgPack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .netmsg.MsgHead head = 1;
    if (has_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->head());
    }

    // optional .netmsg.RegistTypeMsg registtype = 2;
    if (has_registtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->registtype());
    }

    // optional .netmsg.RegistTypeMsgResult registtypemsgresult = 3;
    if (has_registtypemsgresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->registtypemsgresult());
    }

    // optional .netmsg.QueryDevCntMsg querydevcntmsg = 4;
    if (has_querydevcntmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querydevcntmsg());
    }

    // optional .netmsg.QueryDevCntMsgResult querydevcntmsgresult = 5;
    if (has_querydevcntmsgresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querydevcntmsgresult());
    }

    // optional .netmsg.QueryMsg query = 6;
    if (has_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->query());
    }

    // optional .netmsg.AddMsg add = 7;
    if (has_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->add());
    }

    // optional .netmsg.QueryMsgResult querymsgresult = 8;
    if (has_querymsgresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querymsgresult());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .netmsg.AddMsgResult addmsgresult = 9;
    if (has_addmsgresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addmsgresult());
    }

    // optional .netmsg.ExcuteSqlMsg excutesqlmsg = 10;
    if (has_excutesqlmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->excutesqlmsg());
    }

    // optional .netmsg.ExcuteSqlMsgResult excutesqlmsgresult = 11;
    if (has_excutesqlmsgresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->excutesqlmsgresult());
    }

    // optional .netmsg.QueryDevSpeedMsg querydevspeedmsg = 12;
    if (has_querydevspeedmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querydevspeedmsg());
    }

    // optional .netmsg.QueryDevSpeedMsgResult querydevspeedmsgresult = 13;
    if (has_querydevspeedmsgresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querydevspeedmsgresult());
    }

    // optional .netmsg.QueryConnectionsStrMsg queryconnectionsstrmsg = 14;
    if (has_queryconnectionsstrmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryconnectionsstrmsg());
    }

    // optional .netmsg.QueryConnectionsStrMsgResult queryconnectionsstrmsgresult = 15;
    if (has_queryconnectionsstrmsgresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryconnectionsstrmsgresult());
    }

    // optional .netmsg.AddVersionMsg addversionmsg = 20;
    if (has_addversionmsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addversionmsg());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .netmsg.AddVersionMsgResult addversionmsgresult = 21;
    if (has_addversionmsgresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addversionmsgresult());
    }

    // optional .netmsg.UpgradeMsg upgrademsg = 50;
    if (has_upgrademsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->upgrademsg());
    }

    // optional .netmsg.UpgradeDownLoadMsg upgradedownloadmsg = 51;
    if (has_upgradedownloadmsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->upgradedownloadmsg());
    }

    // optional .netmsg.UpgradeDownLoadMsgResult upgradedownloadmsgresult = 52;
    if (has_upgradedownloadmsgresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->upgradedownloadmsgresult());
    }

    // optional .netmsg.UpgradeMsgResult upgrademsgresult = 53;
    if (has_upgrademsgresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->upgrademsgresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPack::MergeFrom(const MsgPack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_head()) {
      mutable_head()->::netmsg::MsgHead::MergeFrom(from.head());
    }
    if (from.has_registtype()) {
      mutable_registtype()->::netmsg::RegistTypeMsg::MergeFrom(from.registtype());
    }
    if (from.has_registtypemsgresult()) {
      mutable_registtypemsgresult()->::netmsg::RegistTypeMsgResult::MergeFrom(from.registtypemsgresult());
    }
    if (from.has_querydevcntmsg()) {
      mutable_querydevcntmsg()->::netmsg::QueryDevCntMsg::MergeFrom(from.querydevcntmsg());
    }
    if (from.has_querydevcntmsgresult()) {
      mutable_querydevcntmsgresult()->::netmsg::QueryDevCntMsgResult::MergeFrom(from.querydevcntmsgresult());
    }
    if (from.has_query()) {
      mutable_query()->::netmsg::QueryMsg::MergeFrom(from.query());
    }
    if (from.has_add()) {
      mutable_add()->::netmsg::AddMsg::MergeFrom(from.add());
    }
    if (from.has_querymsgresult()) {
      mutable_querymsgresult()->::netmsg::QueryMsgResult::MergeFrom(from.querymsgresult());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_addmsgresult()) {
      mutable_addmsgresult()->::netmsg::AddMsgResult::MergeFrom(from.addmsgresult());
    }
    if (from.has_excutesqlmsg()) {
      mutable_excutesqlmsg()->::netmsg::ExcuteSqlMsg::MergeFrom(from.excutesqlmsg());
    }
    if (from.has_excutesqlmsgresult()) {
      mutable_excutesqlmsgresult()->::netmsg::ExcuteSqlMsgResult::MergeFrom(from.excutesqlmsgresult());
    }
    if (from.has_querydevspeedmsg()) {
      mutable_querydevspeedmsg()->::netmsg::QueryDevSpeedMsg::MergeFrom(from.querydevspeedmsg());
    }
    if (from.has_querydevspeedmsgresult()) {
      mutable_querydevspeedmsgresult()->::netmsg::QueryDevSpeedMsgResult::MergeFrom(from.querydevspeedmsgresult());
    }
    if (from.has_queryconnectionsstrmsg()) {
      mutable_queryconnectionsstrmsg()->::netmsg::QueryConnectionsStrMsg::MergeFrom(from.queryconnectionsstrmsg());
    }
    if (from.has_queryconnectionsstrmsgresult()) {
      mutable_queryconnectionsstrmsgresult()->::netmsg::QueryConnectionsStrMsgResult::MergeFrom(from.queryconnectionsstrmsgresult());
    }
    if (from.has_addversionmsg()) {
      mutable_addversionmsg()->::netmsg::AddVersionMsg::MergeFrom(from.addversionmsg());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_addversionmsgresult()) {
      mutable_addversionmsgresult()->::netmsg::AddVersionMsgResult::MergeFrom(from.addversionmsgresult());
    }
    if (from.has_upgrademsg()) {
      mutable_upgrademsg()->::netmsg::UpgradeMsg::MergeFrom(from.upgrademsg());
    }
    if (from.has_upgradedownloadmsg()) {
      mutable_upgradedownloadmsg()->::netmsg::UpgradeDownLoadMsg::MergeFrom(from.upgradedownloadmsg());
    }
    if (from.has_upgradedownloadmsgresult()) {
      mutable_upgradedownloadmsgresult()->::netmsg::UpgradeDownLoadMsgResult::MergeFrom(from.upgradedownloadmsgresult());
    }
    if (from.has_upgrademsgresult()) {
      mutable_upgrademsgresult()->::netmsg::UpgradeMsgResult::MergeFrom(from.upgrademsgresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPack::CopyFrom(const MsgPack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_head()) {
    if (!this->head().IsInitialized()) return false;
  }
  if (has_registtype()) {
    if (!this->registtype().IsInitialized()) return false;
  }
  if (has_querydevcntmsgresult()) {
    if (!this->querydevcntmsgresult().IsInitialized()) return false;
  }
  if (has_query()) {
    if (!this->query().IsInitialized()) return false;
  }
  if (has_add()) {
    if (!this->add().IsInitialized()) return false;
  }
  if (has_querymsgresult()) {
    if (!this->querymsgresult().IsInitialized()) return false;
  }
  if (has_addmsgresult()) {
    if (!this->addmsgresult().IsInitialized()) return false;
  }
  if (has_excutesqlmsg()) {
    if (!this->excutesqlmsg().IsInitialized()) return false;
  }
  if (has_excutesqlmsgresult()) {
    if (!this->excutesqlmsgresult().IsInitialized()) return false;
  }
  if (has_querydevspeedmsg()) {
    if (!this->querydevspeedmsg().IsInitialized()) return false;
  }
  if (has_querydevspeedmsgresult()) {
    if (!this->querydevspeedmsgresult().IsInitialized()) return false;
  }
  if (has_queryconnectionsstrmsgresult()) {
    if (!this->queryconnectionsstrmsgresult().IsInitialized()) return false;
  }
  if (has_addversionmsg()) {
    if (!this->addversionmsg().IsInitialized()) return false;
  }
  if (has_addversionmsgresult()) {
    if (!this->addversionmsgresult().IsInitialized()) return false;
  }
  if (has_upgrademsg()) {
    if (!this->upgrademsg().IsInitialized()) return false;
  }
  if (has_upgradedownloadmsg()) {
    if (!this->upgradedownloadmsg().IsInitialized()) return false;
  }
  if (has_upgradedownloadmsgresult()) {
    if (!this->upgradedownloadmsgresult().IsInitialized()) return false;
  }
  if (has_upgrademsgresult()) {
    if (!this->upgrademsgresult().IsInitialized()) return false;
  }
  return true;
}

void MsgPack::Swap(MsgPack* other) {
  if (other != this) {
    std::swap(head_, other->head_);
    std::swap(registtype_, other->registtype_);
    std::swap(registtypemsgresult_, other->registtypemsgresult_);
    std::swap(querydevcntmsg_, other->querydevcntmsg_);
    std::swap(querydevcntmsgresult_, other->querydevcntmsgresult_);
    std::swap(query_, other->query_);
    std::swap(add_, other->add_);
    std::swap(querymsgresult_, other->querymsgresult_);
    std::swap(addmsgresult_, other->addmsgresult_);
    std::swap(excutesqlmsg_, other->excutesqlmsg_);
    std::swap(excutesqlmsgresult_, other->excutesqlmsgresult_);
    std::swap(querydevspeedmsg_, other->querydevspeedmsg_);
    std::swap(querydevspeedmsgresult_, other->querydevspeedmsgresult_);
    std::swap(queryconnectionsstrmsg_, other->queryconnectionsstrmsg_);
    std::swap(queryconnectionsstrmsgresult_, other->queryconnectionsstrmsgresult_);
    std::swap(addversionmsg_, other->addversionmsg_);
    std::swap(addversionmsgresult_, other->addversionmsgresult_);
    std::swap(upgrademsg_, other->upgrademsg_);
    std::swap(upgradedownloadmsg_, other->upgradedownloadmsg_);
    std::swap(upgradedownloadmsgresult_, other->upgradedownloadmsgresult_);
    std::swap(upgrademsgresult_, other->upgrademsgresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPack_descriptor_;
  metadata.reflection = MsgPack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHead::kGlobalPackNumberFieldNumber;
const int MsgHead::kTotalPackFieldNumber;
const int MsgHead::kPackIndexFieldNumber;
#endif  // !_MSC_VER

MsgHead::MsgHead()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.MsgHead)
}

void MsgHead::InitAsDefaultInstance() {
}

MsgHead::MsgHead(const MsgHead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.MsgHead)
}

void MsgHead::SharedCtor() {
  _cached_size_ = 0;
  globalpacknumber_ = 1u;
  totalpack_ = 1;
  packindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:netmsg.MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHead_descriptor_;
}

const MsgHead& MsgHead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

MsgHead* MsgHead::default_instance_ = NULL;

MsgHead* MsgHead::New() const {
  return new MsgHead;
}

void MsgHead::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    globalpacknumber_ = 1u;
    totalpack_ = 1;
    packindex_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.MsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 globalPackNumber = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &globalpacknumber_)));
          set_has_globalpacknumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_totalPack;
        break;
      }

      // required int32 totalPack = 2 [default = 1];
      case 2: {
        if (tag == 16) {
         parse_totalPack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalpack_)));
          set_has_totalpack();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packIndex;
        break;
      }

      // required int32 packIndex = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_packIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packindex_)));
          set_has_packindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.MsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.MsgHead)
  return false;
#undef DO_
}

void MsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.MsgHead)
  // required uint32 globalPackNumber = 1 [default = 1];
  if (has_globalpacknumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->globalpacknumber(), output);
  }

  // required int32 totalPack = 2 [default = 1];
  if (has_totalpack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->totalpack(), output);
  }

  // required int32 packIndex = 3 [default = 0];
  if (has_packindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->packindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.MsgHead)
}

::google::protobuf::uint8* MsgHead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.MsgHead)
  // required uint32 globalPackNumber = 1 [default = 1];
  if (has_globalpacknumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->globalpacknumber(), target);
  }

  // required int32 totalPack = 2 [default = 1];
  if (has_totalpack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->totalpack(), target);
  }

  // required int32 packIndex = 3 [default = 0];
  if (has_packindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->packindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.MsgHead)
  return target;
}

int MsgHead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 globalPackNumber = 1 [default = 1];
    if (has_globalpacknumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->globalpacknumber());
    }

    // required int32 totalPack = 2 [default = 1];
    if (has_totalpack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalpack());
    }

    // required int32 packIndex = 3 [default = 0];
    if (has_packindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->packindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_globalpacknumber()) {
      set_globalpacknumber(from.globalpacknumber());
    }
    if (from.has_totalpack()) {
      set_totalpack(from.totalpack());
    }
    if (from.has_packindex()) {
      set_packindex(from.packindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHead::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgHead::Swap(MsgHead* other) {
  if (other != this) {
    std::swap(globalpacknumber_, other->globalpacknumber_);
    std::swap(totalpack_, other->totalpack_);
    std::swap(packindex_, other->packindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHead_descriptor_;
  metadata.reflection = MsgHead_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RegistTypeMsg::kBDeviceFieldNumber;
const int RegistTypeMsg::kIpFieldNumber;
const int RegistTypeMsg::kServeripFieldNumber;
const int RegistTypeMsg::kBNormalFieldNumber;
#endif  // !_MSC_VER

RegistTypeMsg::RegistTypeMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.RegistTypeMsg)
}

void RegistTypeMsg::InitAsDefaultInstance() {
}

RegistTypeMsg::RegistTypeMsg(const RegistTypeMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.RegistTypeMsg)
}

void RegistTypeMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bdevice_ = false;
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bnormal_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegistTypeMsg::~RegistTypeMsg() {
  // @@protoc_insertion_point(destructor:netmsg.RegistTypeMsg)
  SharedDtor();
}

void RegistTypeMsg::SharedDtor() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (serverip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverip_;
  }
  if (this != default_instance_) {
  }
}

void RegistTypeMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistTypeMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistTypeMsg_descriptor_;
}

const RegistTypeMsg& RegistTypeMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

RegistTypeMsg* RegistTypeMsg::default_instance_ = NULL;

RegistTypeMsg* RegistTypeMsg::New() const {
  return new RegistTypeMsg;
}

void RegistTypeMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RegistTypeMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(bdevice_, bnormal_);
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    if (has_serverip()) {
      if (serverip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverip_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RegistTypeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.RegistTypeMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool bDevice = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdevice_)));
          set_has_bdevice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ip;
        break;
      }

      // required string ip = 2;
      case 2: {
        if (tag == 18) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_serverip;
        break;
      }

      // required string serverip = 3;
      case 3: {
        if (tag == 26) {
         parse_serverip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverip().data(), this->serverip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bNormal;
        break;
      }

      // required bool bNormal = 4;
      case 4: {
        if (tag == 32) {
         parse_bNormal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bnormal_)));
          set_has_bnormal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.RegistTypeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.RegistTypeMsg)
  return false;
#undef DO_
}

void RegistTypeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.RegistTypeMsg)
  // required bool bDevice = 1;
  if (has_bdevice()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bdevice(), output);
  }

  // required string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // required string serverip = 3;
  if (has_serverip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serverip(), output);
  }

  // required bool bNormal = 4;
  if (has_bnormal()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bnormal(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.RegistTypeMsg)
}

::google::protobuf::uint8* RegistTypeMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.RegistTypeMsg)
  // required bool bDevice = 1;
  if (has_bdevice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bdevice(), target);
  }

  // required string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // required string serverip = 3;
  if (has_serverip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serverip(), target);
  }

  // required bool bNormal = 4;
  if (has_bnormal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bnormal(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.RegistTypeMsg)
  return target;
}

int RegistTypeMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool bDevice = 1;
    if (has_bdevice()) {
      total_size += 1 + 1;
    }

    // required string ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // required string serverip = 3;
    if (has_serverip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverip());
    }

    // required bool bNormal = 4;
    if (has_bnormal()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistTypeMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RegistTypeMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RegistTypeMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RegistTypeMsg::MergeFrom(const RegistTypeMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bdevice()) {
      set_bdevice(from.bdevice());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_serverip()) {
      set_serverip(from.serverip());
    }
    if (from.has_bnormal()) {
      set_bnormal(from.bnormal());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RegistTypeMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistTypeMsg::CopyFrom(const RegistTypeMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistTypeMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RegistTypeMsg::Swap(RegistTypeMsg* other) {
  if (other != this) {
    std::swap(bdevice_, other->bdevice_);
    std::swap(ip_, other->ip_);
    std::swap(serverip_, other->serverip_);
    std::swap(bnormal_, other->bnormal_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RegistTypeMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistTypeMsg_descriptor_;
  metadata.reflection = RegistTypeMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RegistTypeMsgResult::RegistTypeMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.RegistTypeMsgResult)
}

void RegistTypeMsgResult::InitAsDefaultInstance() {
}

RegistTypeMsgResult::RegistTypeMsgResult(const RegistTypeMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.RegistTypeMsgResult)
}

void RegistTypeMsgResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegistTypeMsgResult::~RegistTypeMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.RegistTypeMsgResult)
  SharedDtor();
}

void RegistTypeMsgResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RegistTypeMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistTypeMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistTypeMsgResult_descriptor_;
}

const RegistTypeMsgResult& RegistTypeMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

RegistTypeMsgResult* RegistTypeMsgResult::default_instance_ = NULL;

RegistTypeMsgResult* RegistTypeMsgResult::New() const {
  return new RegistTypeMsgResult;
}

void RegistTypeMsgResult::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RegistTypeMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.RegistTypeMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.RegistTypeMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.RegistTypeMsgResult)
  return false;
#undef DO_
}

void RegistTypeMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.RegistTypeMsgResult)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.RegistTypeMsgResult)
}

::google::protobuf::uint8* RegistTypeMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.RegistTypeMsgResult)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.RegistTypeMsgResult)
  return target;
}

int RegistTypeMsgResult::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistTypeMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RegistTypeMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RegistTypeMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RegistTypeMsgResult::MergeFrom(const RegistTypeMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RegistTypeMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistTypeMsgResult::CopyFrom(const RegistTypeMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistTypeMsgResult::IsInitialized() const {

  return true;
}

void RegistTypeMsgResult::Swap(RegistTypeMsgResult* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RegistTypeMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistTypeMsgResult_descriptor_;
  metadata.reflection = RegistTypeMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

QueryDevCntMsg::QueryDevCntMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryDevCntMsg)
}

void QueryDevCntMsg::InitAsDefaultInstance() {
}

QueryDevCntMsg::QueryDevCntMsg(const QueryDevCntMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryDevCntMsg)
}

void QueryDevCntMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryDevCntMsg::~QueryDevCntMsg() {
  // @@protoc_insertion_point(destructor:netmsg.QueryDevCntMsg)
  SharedDtor();
}

void QueryDevCntMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryDevCntMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevCntMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryDevCntMsg_descriptor_;
}

const QueryDevCntMsg& QueryDevCntMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryDevCntMsg* QueryDevCntMsg::default_instance_ = NULL;

QueryDevCntMsg* QueryDevCntMsg::New() const {
  return new QueryDevCntMsg;
}

void QueryDevCntMsg::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryDevCntMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryDevCntMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryDevCntMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryDevCntMsg)
  return false;
#undef DO_
}

void QueryDevCntMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryDevCntMsg)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryDevCntMsg)
}

::google::protobuf::uint8* QueryDevCntMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryDevCntMsg)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryDevCntMsg)
  return target;
}

int QueryDevCntMsg::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevCntMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryDevCntMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryDevCntMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryDevCntMsg::MergeFrom(const QueryDevCntMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryDevCntMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevCntMsg::CopyFrom(const QueryDevCntMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevCntMsg::IsInitialized() const {

  return true;
}

void QueryDevCntMsg::Swap(QueryDevCntMsg* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryDevCntMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryDevCntMsg_descriptor_;
  metadata.reflection = QueryDevCntMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryDevCntMsgResult::kDevCntFieldNumber;
#endif  // !_MSC_VER

QueryDevCntMsgResult::QueryDevCntMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryDevCntMsgResult)
}

void QueryDevCntMsgResult::InitAsDefaultInstance() {
}

QueryDevCntMsgResult::QueryDevCntMsgResult(const QueryDevCntMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryDevCntMsgResult)
}

void QueryDevCntMsgResult::SharedCtor() {
  _cached_size_ = 0;
  devcnt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryDevCntMsgResult::~QueryDevCntMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.QueryDevCntMsgResult)
  SharedDtor();
}

void QueryDevCntMsgResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryDevCntMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevCntMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryDevCntMsgResult_descriptor_;
}

const QueryDevCntMsgResult& QueryDevCntMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryDevCntMsgResult* QueryDevCntMsgResult::default_instance_ = NULL;

QueryDevCntMsgResult* QueryDevCntMsgResult::New() const {
  return new QueryDevCntMsgResult;
}

void QueryDevCntMsgResult::Clear() {
  devcnt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryDevCntMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryDevCntMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 devCnt = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devcnt_)));
          set_has_devcnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryDevCntMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryDevCntMsgResult)
  return false;
#undef DO_
}

void QueryDevCntMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryDevCntMsgResult)
  // required int32 devCnt = 1;
  if (has_devcnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->devcnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryDevCntMsgResult)
}

::google::protobuf::uint8* QueryDevCntMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryDevCntMsgResult)
  // required int32 devCnt = 1;
  if (has_devcnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->devcnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryDevCntMsgResult)
  return target;
}

int QueryDevCntMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 devCnt = 1;
    if (has_devcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->devcnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevCntMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryDevCntMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryDevCntMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryDevCntMsgResult::MergeFrom(const QueryDevCntMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_devcnt()) {
      set_devcnt(from.devcnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryDevCntMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevCntMsgResult::CopyFrom(const QueryDevCntMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevCntMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QueryDevCntMsgResult::Swap(QueryDevCntMsgResult* other) {
  if (other != this) {
    std::swap(devcnt_, other->devcnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryDevCntMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryDevCntMsgResult_descriptor_;
  metadata.reflection = QueryDevCntMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

QueryConnectionsStrMsg::QueryConnectionsStrMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryConnectionsStrMsg)
}

void QueryConnectionsStrMsg::InitAsDefaultInstance() {
}

QueryConnectionsStrMsg::QueryConnectionsStrMsg(const QueryConnectionsStrMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryConnectionsStrMsg)
}

void QueryConnectionsStrMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryConnectionsStrMsg::~QueryConnectionsStrMsg() {
  // @@protoc_insertion_point(destructor:netmsg.QueryConnectionsStrMsg)
  SharedDtor();
}

void QueryConnectionsStrMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryConnectionsStrMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryConnectionsStrMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryConnectionsStrMsg_descriptor_;
}

const QueryConnectionsStrMsg& QueryConnectionsStrMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryConnectionsStrMsg* QueryConnectionsStrMsg::default_instance_ = NULL;

QueryConnectionsStrMsg* QueryConnectionsStrMsg::New() const {
  return new QueryConnectionsStrMsg;
}

void QueryConnectionsStrMsg::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryConnectionsStrMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryConnectionsStrMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryConnectionsStrMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryConnectionsStrMsg)
  return false;
#undef DO_
}

void QueryConnectionsStrMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryConnectionsStrMsg)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryConnectionsStrMsg)
}

::google::protobuf::uint8* QueryConnectionsStrMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryConnectionsStrMsg)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryConnectionsStrMsg)
  return target;
}

int QueryConnectionsStrMsg::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryConnectionsStrMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryConnectionsStrMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryConnectionsStrMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryConnectionsStrMsg::MergeFrom(const QueryConnectionsStrMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryConnectionsStrMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryConnectionsStrMsg::CopyFrom(const QueryConnectionsStrMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionsStrMsg::IsInitialized() const {

  return true;
}

void QueryConnectionsStrMsg::Swap(QueryConnectionsStrMsg* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryConnectionsStrMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryConnectionsStrMsg_descriptor_;
  metadata.reflection = QueryConnectionsStrMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryConnectionsStrMsgResult::kResultDataFieldNumber;
const int QueryConnectionsStrMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

QueryConnectionsStrMsgResult::QueryConnectionsStrMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryConnectionsStrMsgResult)
}

void QueryConnectionsStrMsgResult::InitAsDefaultInstance() {
}

QueryConnectionsStrMsgResult::QueryConnectionsStrMsgResult(const QueryConnectionsStrMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryConnectionsStrMsgResult)
}

void QueryConnectionsStrMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resultdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryConnectionsStrMsgResult::~QueryConnectionsStrMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.QueryConnectionsStrMsgResult)
  SharedDtor();
}

void QueryConnectionsStrMsgResult::SharedDtor() {
  if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdata_;
  }
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void QueryConnectionsStrMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryConnectionsStrMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryConnectionsStrMsgResult_descriptor_;
}

const QueryConnectionsStrMsgResult& QueryConnectionsStrMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryConnectionsStrMsgResult* QueryConnectionsStrMsgResult::default_instance_ = NULL;

QueryConnectionsStrMsgResult* QueryConnectionsStrMsgResult::New() const {
  return new QueryConnectionsStrMsgResult;
}

void QueryConnectionsStrMsgResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_resultdata()) {
      if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdata_->clear();
      }
    }
    if (has_resulterror()) {
      if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resulterror_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryConnectionsStrMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryConnectionsStrMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdata().data(), this->resultdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultError;
        break;
      }

      // required string resultError = 2;
      case 2: {
        if (tag == 18) {
         parse_resultError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryConnectionsStrMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryConnectionsStrMsgResult)
  return false;
#undef DO_
}

void QueryConnectionsStrMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryConnectionsStrMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resultdata(), output);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryConnectionsStrMsgResult)
}

::google::protobuf::uint8* QueryConnectionsStrMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryConnectionsStrMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resultdata(), target);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryConnectionsStrMsgResult)
  return target;
}

int QueryConnectionsStrMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultData = 1;
    if (has_resultdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdata());
    }

    // required string resultError = 2;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryConnectionsStrMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryConnectionsStrMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryConnectionsStrMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryConnectionsStrMsgResult::MergeFrom(const QueryConnectionsStrMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultdata()) {
      set_resultdata(from.resultdata());
    }
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryConnectionsStrMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryConnectionsStrMsgResult::CopyFrom(const QueryConnectionsStrMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConnectionsStrMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void QueryConnectionsStrMsgResult::Swap(QueryConnectionsStrMsgResult* other) {
  if (other != this) {
    std::swap(resultdata_, other->resultdata_);
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryConnectionsStrMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryConnectionsStrMsgResult_descriptor_;
  metadata.reflection = QueryConnectionsStrMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryMsg::kMsgFieldNumber;
#endif  // !_MSC_VER

QueryMsg::QueryMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryMsg)
}

void QueryMsg::InitAsDefaultInstance() {
}

QueryMsg::QueryMsg(const QueryMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryMsg)
}

void QueryMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryMsg::~QueryMsg() {
  // @@protoc_insertion_point(destructor:netmsg.QueryMsg)
  SharedDtor();
}

void QueryMsg::SharedDtor() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void QueryMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMsg_descriptor_;
}

const QueryMsg& QueryMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryMsg* QueryMsg::default_instance_ = NULL;

QueryMsg* QueryMsg::New() const {
  return new QueryMsg;
}

void QueryMsg::Clear() {
  if (has_msg()) {
    if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      msg_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryMsg)
  return false;
#undef DO_
}

void QueryMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryMsg)
  // required string Msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryMsg)
}

::google::protobuf::uint8* QueryMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryMsg)
  // required string Msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryMsg)
  return target;
}

int QueryMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Msg = 1;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryMsg::MergeFrom(const QueryMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryMsg::CopyFrom(const QueryMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QueryMsg::Swap(QueryMsg* other) {
  if (other != this) {
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryMsg_descriptor_;
  metadata.reflection = QueryMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryMsgResult::kResultDataFieldNumber;
const int QueryMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

QueryMsgResult::QueryMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryMsgResult)
}

void QueryMsgResult::InitAsDefaultInstance() {
}

QueryMsgResult::QueryMsgResult(const QueryMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryMsgResult)
}

void QueryMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resultdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryMsgResult::~QueryMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.QueryMsgResult)
  SharedDtor();
}

void QueryMsgResult::SharedDtor() {
  if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdata_;
  }
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void QueryMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMsgResult_descriptor_;
}

const QueryMsgResult& QueryMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryMsgResult* QueryMsgResult::default_instance_ = NULL;

QueryMsgResult* QueryMsgResult::New() const {
  return new QueryMsgResult;
}

void QueryMsgResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_resultdata()) {
      if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdata_->clear();
      }
    }
    if (has_resulterror()) {
      if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resulterror_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdata().data(), this->resultdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultError;
        break;
      }

      // required string resultError = 2;
      case 2: {
        if (tag == 18) {
         parse_resultError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryMsgResult)
  return false;
#undef DO_
}

void QueryMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resultdata(), output);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryMsgResult)
}

::google::protobuf::uint8* QueryMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resultdata(), target);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryMsgResult)
  return target;
}

int QueryMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultData = 1;
    if (has_resultdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdata());
    }

    // required string resultError = 2;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryMsgResult::MergeFrom(const QueryMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultdata()) {
      set_resultdata(from.resultdata());
    }
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryMsgResult::CopyFrom(const QueryMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void QueryMsgResult::Swap(QueryMsgResult* other) {
  if (other != this) {
    std::swap(resultdata_, other->resultdata_);
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryMsgResult_descriptor_;
  metadata.reflection = QueryMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddMsg::kTableNameFieldNumber;
const int AddMsg::kMsgFieldNumber;
#endif  // !_MSC_VER

AddMsg::AddMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AddMsg)
}

void AddMsg::InitAsDefaultInstance() {
}

AddMsg::AddMsg(const AddMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AddMsg)
}

void AddMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddMsg::~AddMsg() {
  // @@protoc_insertion_point(destructor:netmsg.AddMsg)
  SharedDtor();
}

void AddMsg::SharedDtor() {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void AddMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddMsg_descriptor_;
}

const AddMsg& AddMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

AddMsg* AddMsg::default_instance_ = NULL;

AddMsg* AddMsg::New() const {
  return new AddMsg;
}

void AddMsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_tablename()) {
      if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tablename_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AddMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string TableName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tablename().data(), this->tablename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tablename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Msg;
        break;
      }

      // required string Msg = 2;
      case 2: {
        if (tag == 18) {
         parse_Msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AddMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AddMsg)
  return false;
#undef DO_
}

void AddMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AddMsg)
  // required string TableName = 1;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // required string Msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AddMsg)
}

::google::protobuf::uint8* AddMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AddMsg)
  // required string TableName = 1;
  if (has_tablename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tablename().data(), this->tablename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tablename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // required string Msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AddMsg)
  return target;
}

int AddMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string TableName = 1;
    if (has_tablename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tablename());
    }

    // required string Msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddMsg::MergeFrom(const AddMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tablename()) {
      set_tablename(from.tablename());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMsg::CopyFrom(const AddMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AddMsg::Swap(AddMsg* other) {
  if (other != this) {
    std::swap(tablename_, other->tablename_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddMsg_descriptor_;
  metadata.reflection = AddMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

AddMsgResult::AddMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AddMsgResult)
}

void AddMsgResult::InitAsDefaultInstance() {
}

AddMsgResult::AddMsgResult(const AddMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AddMsgResult)
}

void AddMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddMsgResult::~AddMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.AddMsgResult)
  SharedDtor();
}

void AddMsgResult::SharedDtor() {
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void AddMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddMsgResult_descriptor_;
}

const AddMsgResult& AddMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

AddMsgResult* AddMsgResult::default_instance_ = NULL;

AddMsgResult* AddMsgResult::New() const {
  return new AddMsgResult;
}

void AddMsgResult::Clear() {
  if (has_resulterror()) {
    if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      resulterror_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AddMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultError = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AddMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AddMsgResult)
  return false;
#undef DO_
}

void AddMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AddMsgResult)
  // required string resultError = 1;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AddMsgResult)
}

::google::protobuf::uint8* AddMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AddMsgResult)
  // required string resultError = 1;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AddMsgResult)
  return target;
}

int AddMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultError = 1;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddMsgResult::MergeFrom(const AddMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMsgResult::CopyFrom(const AddMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AddMsgResult::Swap(AddMsgResult* other) {
  if (other != this) {
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddMsgResult_descriptor_;
  metadata.reflection = AddMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExcuteSqlMsg::kMsgFieldNumber;
#endif  // !_MSC_VER

ExcuteSqlMsg::ExcuteSqlMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.ExcuteSqlMsg)
}

void ExcuteSqlMsg::InitAsDefaultInstance() {
}

ExcuteSqlMsg::ExcuteSqlMsg(const ExcuteSqlMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.ExcuteSqlMsg)
}

void ExcuteSqlMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExcuteSqlMsg::~ExcuteSqlMsg() {
  // @@protoc_insertion_point(destructor:netmsg.ExcuteSqlMsg)
  SharedDtor();
}

void ExcuteSqlMsg::SharedDtor() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void ExcuteSqlMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExcuteSqlMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExcuteSqlMsg_descriptor_;
}

const ExcuteSqlMsg& ExcuteSqlMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ExcuteSqlMsg* ExcuteSqlMsg::default_instance_ = NULL;

ExcuteSqlMsg* ExcuteSqlMsg::New() const {
  return new ExcuteSqlMsg;
}

void ExcuteSqlMsg::Clear() {
  if (has_msg()) {
    if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      msg_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExcuteSqlMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.ExcuteSqlMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.ExcuteSqlMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.ExcuteSqlMsg)
  return false;
#undef DO_
}

void ExcuteSqlMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.ExcuteSqlMsg)
  // required string Msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.ExcuteSqlMsg)
}

::google::protobuf::uint8* ExcuteSqlMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.ExcuteSqlMsg)
  // required string Msg = 1;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.ExcuteSqlMsg)
  return target;
}

int ExcuteSqlMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Msg = 1;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExcuteSqlMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExcuteSqlMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExcuteSqlMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExcuteSqlMsg::MergeFrom(const ExcuteSqlMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExcuteSqlMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExcuteSqlMsg::CopyFrom(const ExcuteSqlMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExcuteSqlMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExcuteSqlMsg::Swap(ExcuteSqlMsg* other) {
  if (other != this) {
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExcuteSqlMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExcuteSqlMsg_descriptor_;
  metadata.reflection = ExcuteSqlMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExcuteSqlMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

ExcuteSqlMsgResult::ExcuteSqlMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.ExcuteSqlMsgResult)
}

void ExcuteSqlMsgResult::InitAsDefaultInstance() {
}

ExcuteSqlMsgResult::ExcuteSqlMsgResult(const ExcuteSqlMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.ExcuteSqlMsgResult)
}

void ExcuteSqlMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExcuteSqlMsgResult::~ExcuteSqlMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.ExcuteSqlMsgResult)
  SharedDtor();
}

void ExcuteSqlMsgResult::SharedDtor() {
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void ExcuteSqlMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExcuteSqlMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExcuteSqlMsgResult_descriptor_;
}

const ExcuteSqlMsgResult& ExcuteSqlMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

ExcuteSqlMsgResult* ExcuteSqlMsgResult::default_instance_ = NULL;

ExcuteSqlMsgResult* ExcuteSqlMsgResult::New() const {
  return new ExcuteSqlMsgResult;
}

void ExcuteSqlMsgResult::Clear() {
  if (has_resulterror()) {
    if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      resulterror_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExcuteSqlMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.ExcuteSqlMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultError = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.ExcuteSqlMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.ExcuteSqlMsgResult)
  return false;
#undef DO_
}

void ExcuteSqlMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.ExcuteSqlMsgResult)
  // required string resultError = 1;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.ExcuteSqlMsgResult)
}

::google::protobuf::uint8* ExcuteSqlMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.ExcuteSqlMsgResult)
  // required string resultError = 1;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.ExcuteSqlMsgResult)
  return target;
}

int ExcuteSqlMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultError = 1;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExcuteSqlMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExcuteSqlMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExcuteSqlMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExcuteSqlMsgResult::MergeFrom(const ExcuteSqlMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExcuteSqlMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExcuteSqlMsgResult::CopyFrom(const ExcuteSqlMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExcuteSqlMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExcuteSqlMsgResult::Swap(ExcuteSqlMsgResult* other) {
  if (other != this) {
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExcuteSqlMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExcuteSqlMsgResult_descriptor_;
  metadata.reflection = ExcuteSqlMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryDevSpeedMsg::kIpStrFieldNumber;
const int QueryDevSpeedMsg::kAskUserIDFieldNumber;
const int QueryDevSpeedMsg::kStartTimeFieldNumber;
#endif  // !_MSC_VER

QueryDevSpeedMsg::QueryDevSpeedMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryDevSpeedMsg)
}

void QueryDevSpeedMsg::InitAsDefaultInstance() {
}

QueryDevSpeedMsg::QueryDevSpeedMsg(const QueryDevSpeedMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryDevSpeedMsg)
}

void QueryDevSpeedMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ipstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  askuserid_ = 0;
  starttime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryDevSpeedMsg::~QueryDevSpeedMsg() {
  // @@protoc_insertion_point(destructor:netmsg.QueryDevSpeedMsg)
  SharedDtor();
}

void QueryDevSpeedMsg::SharedDtor() {
  if (ipstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ipstr_;
  }
  if (this != default_instance_) {
  }
}

void QueryDevSpeedMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevSpeedMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryDevSpeedMsg_descriptor_;
}

const QueryDevSpeedMsg& QueryDevSpeedMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryDevSpeedMsg* QueryDevSpeedMsg::default_instance_ = NULL;

QueryDevSpeedMsg* QueryDevSpeedMsg::New() const {
  return new QueryDevSpeedMsg;
}

void QueryDevSpeedMsg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<QueryDevSpeedMsg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(starttime_, askuserid_);
    if (has_ipstr()) {
      if (ipstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ipstr_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryDevSpeedMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryDevSpeedMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ipStr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ipstr().data(), this->ipstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ipstr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_askUserID;
        break;
      }

      // required int32 askUserID = 2;
      case 2: {
        if (tag == 16) {
         parse_askUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askuserid_)));
          set_has_askuserid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_startTime;
        break;
      }

      // required int64 startTime = 3;
      case 3: {
        if (tag == 24) {
         parse_startTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryDevSpeedMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryDevSpeedMsg)
  return false;
#undef DO_
}

void QueryDevSpeedMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryDevSpeedMsg)
  // required string ipStr = 1;
  if (has_ipstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ipstr().data(), this->ipstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ipstr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ipstr(), output);
  }

  // required int32 askUserID = 2;
  if (has_askuserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->askuserid(), output);
  }

  // required int64 startTime = 3;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->starttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryDevSpeedMsg)
}

::google::protobuf::uint8* QueryDevSpeedMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryDevSpeedMsg)
  // required string ipStr = 1;
  if (has_ipstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ipstr().data(), this->ipstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ipstr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ipstr(), target);
  }

  // required int32 askUserID = 2;
  if (has_askuserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->askuserid(), target);
  }

  // required int64 startTime = 3;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->starttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryDevSpeedMsg)
  return target;
}

int QueryDevSpeedMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ipStr = 1;
    if (has_ipstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ipstr());
    }

    // required int32 askUserID = 2;
    if (has_askuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->askuserid());
    }

    // required int64 startTime = 3;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevSpeedMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryDevSpeedMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryDevSpeedMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryDevSpeedMsg::MergeFrom(const QueryDevSpeedMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ipstr()) {
      set_ipstr(from.ipstr());
    }
    if (from.has_askuserid()) {
      set_askuserid(from.askuserid());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryDevSpeedMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevSpeedMsg::CopyFrom(const QueryDevSpeedMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevSpeedMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void QueryDevSpeedMsg::Swap(QueryDevSpeedMsg* other) {
  if (other != this) {
    std::swap(ipstr_, other->ipstr_);
    std::swap(askuserid_, other->askuserid_);
    std::swap(starttime_, other->starttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryDevSpeedMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryDevSpeedMsg_descriptor_;
  metadata.reflection = QueryDevSpeedMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int QueryDevSpeedMsgResult::kSpeedFieldNumber;
const int QueryDevSpeedMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

QueryDevSpeedMsgResult::QueryDevSpeedMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.QueryDevSpeedMsgResult)
}

void QueryDevSpeedMsgResult::InitAsDefaultInstance() {
}

QueryDevSpeedMsgResult::QueryDevSpeedMsgResult(const QueryDevSpeedMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.QueryDevSpeedMsgResult)
}

void QueryDevSpeedMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  speed_ = 0;
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryDevSpeedMsgResult::~QueryDevSpeedMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.QueryDevSpeedMsgResult)
  SharedDtor();
}

void QueryDevSpeedMsgResult::SharedDtor() {
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void QueryDevSpeedMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryDevSpeedMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryDevSpeedMsgResult_descriptor_;
}

const QueryDevSpeedMsgResult& QueryDevSpeedMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

QueryDevSpeedMsgResult* QueryDevSpeedMsgResult::default_instance_ = NULL;

QueryDevSpeedMsgResult* QueryDevSpeedMsgResult::New() const {
  return new QueryDevSpeedMsgResult;
}

void QueryDevSpeedMsgResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    speed_ = 0;
    if (has_resulterror()) {
      if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resulterror_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryDevSpeedMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.QueryDevSpeedMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 speed = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultError;
        break;
      }

      // required string resultError = 2;
      case 2: {
        if (tag == 18) {
         parse_resultError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.QueryDevSpeedMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.QueryDevSpeedMsgResult)
  return false;
#undef DO_
}

void QueryDevSpeedMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.QueryDevSpeedMsgResult)
  // required int32 speed = 1;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->speed(), output);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.QueryDevSpeedMsgResult)
}

::google::protobuf::uint8* QueryDevSpeedMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.QueryDevSpeedMsgResult)
  // required int32 speed = 1;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->speed(), target);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.QueryDevSpeedMsgResult)
  return target;
}

int QueryDevSpeedMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 speed = 1;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

    // required string resultError = 2;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryDevSpeedMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryDevSpeedMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryDevSpeedMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryDevSpeedMsgResult::MergeFrom(const QueryDevSpeedMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryDevSpeedMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryDevSpeedMsgResult::CopyFrom(const QueryDevSpeedMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDevSpeedMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void QueryDevSpeedMsgResult::Swap(QueryDevSpeedMsgResult* other) {
  if (other != this) {
    std::swap(speed_, other->speed_);
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryDevSpeedMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryDevSpeedMsgResult_descriptor_;
  metadata.reflection = QueryDevSpeedMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeMsg::kIpFieldNumber;
const int UpgradeMsg::kVersionFieldNumber;
#endif  // !_MSC_VER

UpgradeMsg::UpgradeMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.UpgradeMsg)
}

void UpgradeMsg::InitAsDefaultInstance() {
}

UpgradeMsg::UpgradeMsg(const UpgradeMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.UpgradeMsg)
}

void UpgradeMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeMsg::~UpgradeMsg() {
  // @@protoc_insertion_point(destructor:netmsg.UpgradeMsg)
  SharedDtor();
}

void UpgradeMsg::SharedDtor() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (this != default_instance_) {
  }
}

void UpgradeMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeMsg_descriptor_;
}

const UpgradeMsg& UpgradeMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

UpgradeMsg* UpgradeMsg::default_instance_ = NULL;

UpgradeMsg* UpgradeMsg::New() const {
  return new UpgradeMsg;
}

void UpgradeMsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    if (has_version()) {
      if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        version_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.UpgradeMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // required string version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.UpgradeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.UpgradeMsg)
  return false;
#undef DO_
}

void UpgradeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.UpgradeMsg)
  // required string ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // required string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.UpgradeMsg)
}

::google::protobuf::uint8* UpgradeMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.UpgradeMsg)
  // required string ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // required string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.UpgradeMsg)
  return target;
}

int UpgradeMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // required string version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeMsg::MergeFrom(const UpgradeMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeMsg::CopyFrom(const UpgradeMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UpgradeMsg::Swap(UpgradeMsg* other) {
  if (other != this) {
    std::swap(ip_, other->ip_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeMsg_descriptor_;
  metadata.reflection = UpgradeMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddVersionMsg::kBianhaoFieldNumber;
const int AddVersionMsg::kBanbenhaoFieldNumber;
const int AddVersionMsg::kAnzhuangbaoFieldNumber;
#endif  // !_MSC_VER

AddVersionMsg::AddVersionMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AddVersionMsg)
}

void AddVersionMsg::InitAsDefaultInstance() {
}

AddVersionMsg::AddVersionMsg(const AddVersionMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AddVersionMsg)
}

void AddVersionMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bianhao_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  banbenhao_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anzhuangbao_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddVersionMsg::~AddVersionMsg() {
  // @@protoc_insertion_point(destructor:netmsg.AddVersionMsg)
  SharedDtor();
}

void AddVersionMsg::SharedDtor() {
  if (bianhao_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bianhao_;
  }
  if (banbenhao_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete banbenhao_;
  }
  if (anzhuangbao_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete anzhuangbao_;
  }
  if (this != default_instance_) {
  }
}

void AddVersionMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddVersionMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddVersionMsg_descriptor_;
}

const AddVersionMsg& AddVersionMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

AddVersionMsg* AddVersionMsg::default_instance_ = NULL;

AddVersionMsg* AddVersionMsg::New() const {
  return new AddVersionMsg;
}

void AddVersionMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_bianhao()) {
      if (bianhao_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bianhao_->clear();
      }
    }
    if (has_banbenhao()) {
      if (banbenhao_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        banbenhao_->clear();
      }
    }
    if (has_anzhuangbao()) {
      if (anzhuangbao_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        anzhuangbao_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddVersionMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AddVersionMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Bianhao = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bianhao()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bianhao().data(), this->bianhao().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bianhao");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Banbenhao;
        break;
      }

      // required string Banbenhao = 2;
      case 2: {
        if (tag == 18) {
         parse_Banbenhao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_banbenhao()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->banbenhao().data(), this->banbenhao().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "banbenhao");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Anzhuangbao;
        break;
      }

      // required bytes Anzhuangbao = 3;
      case 3: {
        if (tag == 26) {
         parse_Anzhuangbao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_anzhuangbao()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AddVersionMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AddVersionMsg)
  return false;
#undef DO_
}

void AddVersionMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AddVersionMsg)
  // required string Bianhao = 1;
  if (has_bianhao()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bianhao().data(), this->bianhao().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bianhao");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bianhao(), output);
  }

  // required string Banbenhao = 2;
  if (has_banbenhao()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->banbenhao().data(), this->banbenhao().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "banbenhao");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->banbenhao(), output);
  }

  // required bytes Anzhuangbao = 3;
  if (has_anzhuangbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->anzhuangbao(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AddVersionMsg)
}

::google::protobuf::uint8* AddVersionMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AddVersionMsg)
  // required string Bianhao = 1;
  if (has_bianhao()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bianhao().data(), this->bianhao().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bianhao");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bianhao(), target);
  }

  // required string Banbenhao = 2;
  if (has_banbenhao()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->banbenhao().data(), this->banbenhao().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "banbenhao");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->banbenhao(), target);
  }

  // required bytes Anzhuangbao = 3;
  if (has_anzhuangbao()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->anzhuangbao(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AddVersionMsg)
  return target;
}

int AddVersionMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Bianhao = 1;
    if (has_bianhao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bianhao());
    }

    // required string Banbenhao = 2;
    if (has_banbenhao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->banbenhao());
    }

    // required bytes Anzhuangbao = 3;
    if (has_anzhuangbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->anzhuangbao());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddVersionMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddVersionMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddVersionMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddVersionMsg::MergeFrom(const AddVersionMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bianhao()) {
      set_bianhao(from.bianhao());
    }
    if (from.has_banbenhao()) {
      set_banbenhao(from.banbenhao());
    }
    if (from.has_anzhuangbao()) {
      set_anzhuangbao(from.anzhuangbao());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddVersionMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddVersionMsg::CopyFrom(const AddVersionMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddVersionMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AddVersionMsg::Swap(AddVersionMsg* other) {
  if (other != this) {
    std::swap(bianhao_, other->bianhao_);
    std::swap(banbenhao_, other->banbenhao_);
    std::swap(anzhuangbao_, other->anzhuangbao_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddVersionMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddVersionMsg_descriptor_;
  metadata.reflection = AddVersionMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddVersionMsgResult::kResultDataFieldNumber;
const int AddVersionMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

AddVersionMsgResult::AddVersionMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.AddVersionMsgResult)
}

void AddVersionMsgResult::InitAsDefaultInstance() {
}

AddVersionMsgResult::AddVersionMsgResult(const AddVersionMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.AddVersionMsgResult)
}

void AddVersionMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resultdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddVersionMsgResult::~AddVersionMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.AddVersionMsgResult)
  SharedDtor();
}

void AddVersionMsgResult::SharedDtor() {
  if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdata_;
  }
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void AddVersionMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddVersionMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddVersionMsgResult_descriptor_;
}

const AddVersionMsgResult& AddVersionMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

AddVersionMsgResult* AddVersionMsgResult::default_instance_ = NULL;

AddVersionMsgResult* AddVersionMsgResult::New() const {
  return new AddVersionMsgResult;
}

void AddVersionMsgResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_resultdata()) {
      if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdata_->clear();
      }
    }
    if (has_resulterror()) {
      if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resulterror_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddVersionMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.AddVersionMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdata().data(), this->resultdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultError;
        break;
      }

      // required string resultError = 2;
      case 2: {
        if (tag == 18) {
         parse_resultError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.AddVersionMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.AddVersionMsgResult)
  return false;
#undef DO_
}

void AddVersionMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.AddVersionMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resultdata(), output);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.AddVersionMsgResult)
}

::google::protobuf::uint8* AddVersionMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.AddVersionMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resultdata(), target);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.AddVersionMsgResult)
  return target;
}

int AddVersionMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultData = 1;
    if (has_resultdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdata());
    }

    // required string resultError = 2;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddVersionMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddVersionMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddVersionMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddVersionMsgResult::MergeFrom(const AddVersionMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultdata()) {
      set_resultdata(from.resultdata());
    }
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddVersionMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddVersionMsgResult::CopyFrom(const AddVersionMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddVersionMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AddVersionMsgResult::Swap(AddVersionMsgResult* other) {
  if (other != this) {
    std::swap(resultdata_, other->resultdata_);
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddVersionMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddVersionMsgResult_descriptor_;
  metadata.reflection = AddVersionMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeDownLoadMsg::kSeteupDataFieldNumber;
const int UpgradeDownLoadMsg::kResultErrorFieldNumber;
#endif  // !_MSC_VER

UpgradeDownLoadMsg::UpgradeDownLoadMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.UpgradeDownLoadMsg)
}

void UpgradeDownLoadMsg::InitAsDefaultInstance() {
}

UpgradeDownLoadMsg::UpgradeDownLoadMsg(const UpgradeDownLoadMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.UpgradeDownLoadMsg)
}

void UpgradeDownLoadMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  seteupdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeDownLoadMsg::~UpgradeDownLoadMsg() {
  // @@protoc_insertion_point(destructor:netmsg.UpgradeDownLoadMsg)
  SharedDtor();
}

void UpgradeDownLoadMsg::SharedDtor() {
  if (seteupdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete seteupdata_;
  }
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void UpgradeDownLoadMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeDownLoadMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeDownLoadMsg_descriptor_;
}

const UpgradeDownLoadMsg& UpgradeDownLoadMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

UpgradeDownLoadMsg* UpgradeDownLoadMsg::default_instance_ = NULL;

UpgradeDownLoadMsg* UpgradeDownLoadMsg::New() const {
  return new UpgradeDownLoadMsg;
}

void UpgradeDownLoadMsg::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_seteupdata()) {
      if (seteupdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        seteupdata_->clear();
      }
    }
    if (has_resulterror()) {
      if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resulterror_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeDownLoadMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.UpgradeDownLoadMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes seteupData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_seteupdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultError;
        break;
      }

      // required string resultError = 2;
      case 2: {
        if (tag == 18) {
         parse_resultError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.UpgradeDownLoadMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.UpgradeDownLoadMsg)
  return false;
#undef DO_
}

void UpgradeDownLoadMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.UpgradeDownLoadMsg)
  // required bytes seteupData = 1;
  if (has_seteupdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->seteupdata(), output);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.UpgradeDownLoadMsg)
}

::google::protobuf::uint8* UpgradeDownLoadMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.UpgradeDownLoadMsg)
  // required bytes seteupData = 1;
  if (has_seteupdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->seteupdata(), target);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.UpgradeDownLoadMsg)
  return target;
}

int UpgradeDownLoadMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes seteupData = 1;
    if (has_seteupdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->seteupdata());
    }

    // required string resultError = 2;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeDownLoadMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeDownLoadMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeDownLoadMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeDownLoadMsg::MergeFrom(const UpgradeDownLoadMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seteupdata()) {
      set_seteupdata(from.seteupdata());
    }
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeDownLoadMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeDownLoadMsg::CopyFrom(const UpgradeDownLoadMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeDownLoadMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UpgradeDownLoadMsg::Swap(UpgradeDownLoadMsg* other) {
  if (other != this) {
    std::swap(seteupdata_, other->seteupdata_);
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeDownLoadMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeDownLoadMsg_descriptor_;
  metadata.reflection = UpgradeDownLoadMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeDownLoadMsgResult::kResultDataFieldNumber;
const int UpgradeDownLoadMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

UpgradeDownLoadMsgResult::UpgradeDownLoadMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.UpgradeDownLoadMsgResult)
}

void UpgradeDownLoadMsgResult::InitAsDefaultInstance() {
}

UpgradeDownLoadMsgResult::UpgradeDownLoadMsgResult(const UpgradeDownLoadMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.UpgradeDownLoadMsgResult)
}

void UpgradeDownLoadMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resultdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeDownLoadMsgResult::~UpgradeDownLoadMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.UpgradeDownLoadMsgResult)
  SharedDtor();
}

void UpgradeDownLoadMsgResult::SharedDtor() {
  if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdata_;
  }
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void UpgradeDownLoadMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeDownLoadMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeDownLoadMsgResult_descriptor_;
}

const UpgradeDownLoadMsgResult& UpgradeDownLoadMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

UpgradeDownLoadMsgResult* UpgradeDownLoadMsgResult::default_instance_ = NULL;

UpgradeDownLoadMsgResult* UpgradeDownLoadMsgResult::New() const {
  return new UpgradeDownLoadMsgResult;
}

void UpgradeDownLoadMsgResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_resultdata()) {
      if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdata_->clear();
      }
    }
    if (has_resulterror()) {
      if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resulterror_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeDownLoadMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.UpgradeDownLoadMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdata().data(), this->resultdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultError;
        break;
      }

      // required string resultError = 2;
      case 2: {
        if (tag == 18) {
         parse_resultError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.UpgradeDownLoadMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.UpgradeDownLoadMsgResult)
  return false;
#undef DO_
}

void UpgradeDownLoadMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.UpgradeDownLoadMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resultdata(), output);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.UpgradeDownLoadMsgResult)
}

::google::protobuf::uint8* UpgradeDownLoadMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.UpgradeDownLoadMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resultdata(), target);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.UpgradeDownLoadMsgResult)
  return target;
}

int UpgradeDownLoadMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultData = 1;
    if (has_resultdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdata());
    }

    // required string resultError = 2;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeDownLoadMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeDownLoadMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeDownLoadMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeDownLoadMsgResult::MergeFrom(const UpgradeDownLoadMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultdata()) {
      set_resultdata(from.resultdata());
    }
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeDownLoadMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeDownLoadMsgResult::CopyFrom(const UpgradeDownLoadMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeDownLoadMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UpgradeDownLoadMsgResult::Swap(UpgradeDownLoadMsgResult* other) {
  if (other != this) {
    std::swap(resultdata_, other->resultdata_);
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeDownLoadMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeDownLoadMsgResult_descriptor_;
  metadata.reflection = UpgradeDownLoadMsgResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeMsgResult::kResultDataFieldNumber;
const int UpgradeMsgResult::kResultErrorFieldNumber;
#endif  // !_MSC_VER

UpgradeMsgResult::UpgradeMsgResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:netmsg.UpgradeMsgResult)
}

void UpgradeMsgResult::InitAsDefaultInstance() {
}

UpgradeMsgResult::UpgradeMsgResult(const UpgradeMsgResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:netmsg.UpgradeMsgResult)
}

void UpgradeMsgResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resultdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resulterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeMsgResult::~UpgradeMsgResult() {
  // @@protoc_insertion_point(destructor:netmsg.UpgradeMsgResult)
  SharedDtor();
}

void UpgradeMsgResult::SharedDtor() {
  if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdata_;
  }
  if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resulterror_;
  }
  if (this != default_instance_) {
  }
}

void UpgradeMsgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeMsgResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeMsgResult_descriptor_;
}

const UpgradeMsgResult& UpgradeMsgResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_netmsg_2eproto();
  return *default_instance_;
}

UpgradeMsgResult* UpgradeMsgResult::default_instance_ = NULL;

UpgradeMsgResult* UpgradeMsgResult::New() const {
  return new UpgradeMsgResult;
}

void UpgradeMsgResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_resultdata()) {
      if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdata_->clear();
      }
    }
    if (has_resulterror()) {
      if (resulterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resulterror_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeMsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:netmsg.UpgradeMsgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string resultData = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdata().data(), this->resultdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultError;
        break;
      }

      // required string resultError = 2;
      case 2: {
        if (tag == 18) {
         parse_resultError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resulterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resulterror().data(), this->resulterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resulterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:netmsg.UpgradeMsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:netmsg.UpgradeMsgResult)
  return false;
#undef DO_
}

void UpgradeMsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:netmsg.UpgradeMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resultdata(), output);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resulterror(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:netmsg.UpgradeMsgResult)
}

::google::protobuf::uint8* UpgradeMsgResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:netmsg.UpgradeMsgResult)
  // required string resultData = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resultdata(), target);
  }

  // required string resultError = 2;
  if (has_resulterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resulterror().data(), this->resulterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resulterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resulterror(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:netmsg.UpgradeMsgResult)
  return target;
}

int UpgradeMsgResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string resultData = 1;
    if (has_resultdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdata());
    }

    // required string resultError = 2;
    if (has_resulterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resulterror());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeMsgResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeMsgResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeMsgResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeMsgResult::MergeFrom(const UpgradeMsgResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultdata()) {
      set_resultdata(from.resultdata());
    }
    if (from.has_resulterror()) {
      set_resulterror(from.resulterror());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeMsgResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeMsgResult::CopyFrom(const UpgradeMsgResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeMsgResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UpgradeMsgResult::Swap(UpgradeMsgResult* other) {
  if (other != this) {
    std::swap(resultdata_, other->resultdata_);
    std::swap(resulterror_, other->resulterror_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeMsgResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeMsgResult_descriptor_;
  metadata.reflection = UpgradeMsgResult_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace netmsg

// @@protoc_insertion_point(global_scope)
